<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏ô‡∏±‡∏á-‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå</title>
    <style>
        /* --- CSS Styles --- */
        :root {
            --primary-color: #e50914; /* Netflix Red */
            --dark-color: #141414;
            --light-dark-color: #222;
            --text-color: #fff;
            --text-secondary: #aaa;
            --border-color: #444;
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: var(--dark-color);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: auto;
            padding: 20px;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 40px;
            background-color: rgba(0, 0, 0, 0.7);
            border-bottom: 2px solid var(--primary-color);
        }

        header h1 {
            color: var(--primary-color);
            font-size: 2.5rem;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        #admin-login-btn {
            background-color: var(--primary-color);
            color: var(--text-color);
            border: none;
            padding: 10px 20px;
            font-size: 1rem;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        #admin-login-btn:hover {
            background-color: #f40612;
        }

        main h2 {
            font-size: 2rem;
            margin-bottom: 20px;
            border-left: 5px solid var(--primary-color);
            padding-left: 10px;
        }

        #movie-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
        }

        .movie-card {
            background-color: var(--light-dark-color);
            border-radius: 8px;
            overflow: hidden;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            position: relative;
        }

        .movie-card:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(229, 9, 20, 0.5);
        }

        .movie-card img {
            width: 100%;
            height: 300px;
            object-fit: cover;
        }

        .movie-card-title {
            padding: 15px;
            font-size: 1.1rem;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        /* --- Modal Styles --- */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.8);
        }

        .modal-content {
            background-color: var(--light-dark-color);
            margin: 5% auto;
            padding: 30px;
            border: 1px solid var(--border-color);
            width: 80%;
            max-width: 800px;
            border-radius: 10px;
            position: relative;
            animation: fadeIn 0.5s;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.9); }
            to { opacity: 1; transform: scale(1); }
        }

        .close-btn {
            color: var(--text-secondary);
            position: absolute;
            top: 15px;
            right: 25px;
            font-size: 35px;
            font-weight: bold;
            cursor: pointer;
        }

        .close-btn:hover { color: var(--text-color); }

        .modal-body {
            display: flex;
            gap: 30px;
        }

        .modal-poster img {
            width: 250px;
            border-radius: 8px;
        }

        .modal-details h2 {
            color: var(--primary-color);
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .modal-details h3 {
             margin-top: 20px;
             border-bottom: 1px solid var(--border-color);
             padding-bottom: 5px;
        }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px 20px;
            margin-top: 15px;
        }

        .info-grid p { margin: 5px 0; }
        .info-grid strong { color: var(--text-secondary); }

        /* --- Admin Panel --- */
        #admin-panel, #login-section {
            display: none; /* Hidden by default */
            background-color: var(--light-dark-color);
            padding: 30px;
            margin-top: 30px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        #login-section {
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: var(--text-secondary);
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 10px;
            background-color: #333;
            border: 1px solid var(--border-color);
            border-radius: 5px;
            color: var(--text-color);
        }

        .form-grid {
             display: grid;
             grid-template-columns: repeat(3, 1fr);
             gap: 15px;
        }

        .form-grid-full {
            grid-column: 1 / -1;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: bold;
            transition: opacity 0.3s;
        }
        .btn:hover { opacity: 0.9; }
        .btn-primary { background-color: var(--primary-color); color: var(--text-color); }
        .btn-secondary { background-color: #555; color: var(--text-color); }
        .btn-danger { background-color: #dc3545; color: white; }

        .admin-actions { margin-top: 20px; }

        #logout-btn { float: right; }
    </style>
</head>
<body>

    <header>
        <h1>Flickhub</h1>
        <button id="admin-login-btn" class="btn">üîë ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•</button>
    </header>

    <div class="container">
        <section id="login-section">
            <h2>‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•</h2>
            <form id="login-form">
                <div class="form-group">
                    <label for="username">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ:</label>
                    <input type="text" id="username" required>
                </div>
                <div class="form-group">
                    <label for="password">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô:</label>
                    <input type="password" id="password" required>
                </div>
                <button type="submit" class="btn btn-primary">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</button>
                 <p id="login-error" style="color: var(--primary-color); margin-top: 10px; display: none;">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!</p>
            </form>
        </section>

        <section id="admin-panel">
            <h2>‡∏™‡πà‡∏ß‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Admin) <button id="logout-btn" class="btn btn-secondary">‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö</button></h2>

            <form id="add-movie-form">
                <h3>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏ô‡∏±‡∏á/‡∏ã‡∏µ‡∏£‡∏µ‡∏™‡πå‡πÉ‡∏´‡∏°‡πà</h3>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="nameTH">‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ó‡∏¢</label>
                        <input type="text" id="nameTH" required>
                    </div>
                    <div class="form-group">
                        <label for="nameEN">‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</label>
                        <input type="text" id="nameEN">
                    </div>
                    <div class="form-group">
                        <label for="country">‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®</label>
                        <select id="country">
                            <option>‡πÑ‡∏ó‡∏¢</option>
                            <option>‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ</option>
                            <option>‡∏à‡∏µ‡∏ô</option>
                            <option>‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô</option>
                            <option>‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="genre">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</label>
                        <input type="text" id="genre" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏≠‡πá‡∏Ñ‡∏ä‡∏±‡πà‡∏ô, ‡∏î‡∏£‡∏≤‡∏°‡πà‡∏≤">
                    </div>
                    <div class="form-group">
                        <label for="year">‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏â‡∏≤‡∏¢</label>
                        <input type="number" id="year">
                    </div>
                    <div class="form-group">
                        <label for="duration">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤/‡∏ï‡∏≠‡∏ô (‡∏ô‡∏≤‡∏ó‡∏µ)</label>
                        <input type="text" id="duration">
                    </div>
                    <div class="form-group">
                        <label for="seasons">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô</label>
                        <input type="text" id="seasons" value="1">
                    </div>
                     <div class="form-group">
                        <label for="episodes">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≠‡∏ô</label>
                        <input type="text" id="episodes" value="1">
                    </div>
                     <div class="form-group">
                        <label for="audio">‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏≤‡∏Å‡∏¢‡πå</label>
                        <input type="text" id="audio" value="‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©">
                    </div>
                     <div class="form-group">
                        <label for="subtitle">‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢</label>
                        <input type="text" id="subtitle" value="‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©">
                    </div>
                    <div class="form-group">
                        <label for="platform1">‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° 1</label>
                        <input type="text" id="platform1">
                    </div>
                    <div class="form-group">
                        <label for="platform2">‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏° 2</label>
                        <input type="text" id="platform2">
                    </div>
                    <div class="form-group form-grid-full">
                        <label for="posterURL">URL ‡πÇ‡∏õ‡∏™‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏´‡∏ô‡∏±‡∏á</label>
                        <input type="url" id="posterURL" required>
                    </div>
                    <div class="form-group form-grid-full">
                        <label for="synopsis">‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠</label>
                        <textarea id="synopsis" rows="4"></textarea>
                    </div>
                     <div class="form-group">
                        <label for="music">‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö</label>
                        <input type="text" id="music">
                    </div>
                     <div class="form-group">
                        <label for="writer">‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó</label>
                        <input type="text" id="writer">
                    </div>
                     <div class="form-group">
                        <label for="director">‡∏ú‡∏π‡πâ‡∏Å‡∏≥‡∏Å‡∏±‡∏ö</label>
                        <input type="text" id="director">
                    </div>
                     <div class="form-group form-grid-full">
                        <label for="cast">‡∏ô‡∏±‡∏Å‡πÅ‡∏™‡∏î‡∏á</label>
                        <input type="text" id="cast">
                    </div>
                     <div class="form-group form-grid-full">
                        <label for="studio">‡∏Ñ‡πà‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏á</label>
                        <input type="text" id="studio">
                    </div>
                </div>
                <div class="admin-actions">
                    <button type="submit" class="btn btn-primary">‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                </div>
            </form>

            <hr style="border-color: var(--border-color); margin: 30px 0;">

            <h3>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .html</h3>
            <div class="form-group">
                <label for="html-upload">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå .html ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏î‡∏π‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)</label>
                <input type="file" id="html-upload" accept=".html">
            </div>
             <button id="upload-btn" class="btn btn-primary">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
        </section>

        <main id="main-content">
            <h2>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î</h2>
            <div id="movie-grid">
                </div>
        </main>
    </div>

    <div id="movie-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn">&times;</span>
            <div id="modal-body-content" class="modal-body">
                </div>
             <button id="delete-movie-btn" class="btn btn-danger" style="margin-top: 20px; display: none;">‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏µ‡πâ</button>
        </div>
    </div>


    <script>
    // --- JavaScript Logic ---

    document.addEventListener('DOMContentLoaded', () => {
        // --- Sample Data ---
        // ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô LocalStorage ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏∏‡∏î‡∏ô‡∏µ‡πâ
        const initialMovies = [
            {
                nameTH: "‡∏ö‡∏∏‡∏û‡πÄ‡∏û‡∏™‡∏±‡∏ô‡∏ô‡∏¥‡∏ß‡∏≤‡∏™ 2",
                nameEN: "Love Destiny The Movie",
                country: "‡πÑ‡∏ó‡∏¢",
                genre: "‡πÇ‡∏£‡πÅ‡∏°‡∏ô‡∏ï‡∏¥‡∏Å, ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏î‡∏µ‡πâ, ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
                year: 2022,
                duration: "166",
                seasons: "N/A",
                episodes: "‡∏†‡∏≤‡∏û‡∏¢‡∏ô‡∏ï‡∏£‡πå",
                audio: "‡πÑ‡∏ó‡∏¢",
                subtitle: "‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
                platform1: "Netflix",
                platform2: "",
                posterURL: "https://i.mydramalist.com/v85gY_4f.jpg",
                synopsis: "‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏ß‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏Ç‡πâ‡∏≤‡∏°‡∏†‡∏û‡∏ä‡∏≤‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á ‡πÄ‡∏Å‡∏™‡∏£ ‡πÅ‡∏•‡∏∞ ‡∏†‡∏û ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏™‡∏°‡∏±‡∏¢‡∏£‡∏±‡∏ï‡∏ô‡πÇ‡∏Å‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡πå‡∏ï‡∏≠‡∏ô‡∏ï‡πâ‡∏ô ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏ä‡∏Ñ‡∏ä‡∏∞‡∏ï‡∏≤‡∏ô‡∏≥‡∏û‡∏≤‡πÉ‡∏´‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏°‡∏≤‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏û‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏¢‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®",
                music: "‡∏ñ‡πâ‡∏≤‡πÄ‡∏ò‡∏≠‡∏£‡∏±‡∏Å‡πÉ‡∏Ñ‡∏£‡∏Ñ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á - INK WARUNTORN",
                writer: "‡∏£‡∏≠‡∏°‡πÅ‡∏û‡∏á",
                director: "‡∏≠‡∏î‡∏¥‡∏™‡∏£‡∏ì‡πå ‡∏ï‡∏£‡∏µ‡∏™‡∏¥‡∏£‡∏¥‡πÄ‡∏Å‡∏©‡∏°",
                cast: "‡∏ò‡∏ô‡∏ß‡∏£‡∏£‡∏ò‡∏ô‡πå ‡∏ß‡∏£‡∏£‡∏ò‡∏ô‡∏∞‡∏†‡∏π‡∏ï‡∏¥, ‡∏£‡∏≤‡∏ì‡∏µ ‡πÅ‡∏Ñ‡∏°‡πÄ‡∏õ‡∏ô, ‡∏û‡∏≤‡∏£‡∏¥‡∏™ ‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡πÇ‡∏Å‡∏°‡∏≤‡∏•‡∏¢‡πå‡∏™‡∏∏‡∏ï",
                studio: "GDH"
            },
            {
                nameTH: "‡∏õ‡∏£‡∏°‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏•‡∏±‡∏ó‡∏ò‡∏¥‡∏°‡∏≤‡∏£",
                nameEN: "The Untamed",
                country: "‡∏à‡∏µ‡∏ô",
                genre: "‡πÅ‡∏ü‡∏ô‡∏ï‡∏≤‡∏ã‡∏µ, ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏†‡∏≤‡∏¢‡πÉ‡∏ô, ‡∏°‡∏¥‡∏ï‡∏£‡∏†‡∏≤‡∏û",
                year: 2019,
                duration: "45",
                seasons: "1",
                episodes: "50",
                audio: "‡∏à‡∏µ‡∏ô, ‡πÑ‡∏ó‡∏¢",
                subtitle: "‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
                platform1: "WeTV",
                platform2: "Netflix",
                posterURL: "https://i.mydramalist.com/2Yv7r_4f.jpg",
                synopsis: "‡πÄ‡∏ß‡πà‡∏¢‡∏≠‡∏π‡πã‡πÄ‡∏ã‡∏µ‡πà‡∏¢‡∏ô ‡∏õ‡∏£‡∏°‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏≠‡∏µ‡πã‡∏´‡∏•‡∏¥‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏Ñ‡∏£‡πÜ ‡∏Å‡πá‡∏Å‡∏•‡πà‡∏≤‡∏ß‡∏´‡∏≤‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ä‡∏±‡πà‡∏ß‡∏ä‡πâ‡∏≤ ‡πÑ‡∏î‡πâ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏°‡∏µ‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô 16 ‡∏õ‡∏µ‡∏ï‡πà‡∏≠‡∏°‡∏≤ ‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏ô‡∏ß‡∏±‡πà‡∏á‡∏à‡∏µ ‡∏™‡∏´‡∏≤‡∏¢‡πÄ‡∏Å‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ï‡∏£‡∏∞‡∏Å‡∏π‡∏•‡∏´‡∏•‡∏≤‡∏ô ‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÑ‡∏Ç‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡πÉ‡∏ô‡∏≠‡∏î‡∏µ‡∏ï‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏õ‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô",
                music: "‡∏≠‡∏π‡πã‡∏à‡∏µ (Êó†ÁæÅ)",
                writer: "‡πÇ‡∏°‡πà‡πÄ‡∏ã‡∏µ‡∏¢‡∏á‡∏ñ‡∏á‡∏ã‡∏¥‡πà‡∏ß (‡∏ô‡∏¥‡∏¢‡∏≤‡∏¢)",
                director: "Zheng Weiwen, Chen Jialin",
                cast: "‡πÄ‡∏ã‡∏µ‡∏¢‡∏ß‡∏à‡πâ‡∏≤‡∏ô, ‡∏´‡∏ß‡∏±‡∏á‡∏≠‡∏µ‡πâ‡∏õ‡πã‡∏≠",
                studio: "Tencent Penguin Pictures"
            },
            {
                nameTH: "‡∏Ñ‡∏¥‡∏á‡∏î‡∏≠‡∏°",
                nameEN: "Kingdom",
                country: "‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ",
                genre: "‡∏™‡∏¢‡∏≠‡∏á‡∏Ç‡∏ß‡∏±‡∏ç, ‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ, ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå",
                year: 2019,
                duration: "50",
                seasons: "2",
                episodes: "12",
                audio: "‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ, ‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
                subtitle: "‡πÑ‡∏ó‡∏¢, ‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©",
                platform1: "Netflix",
                platform2: "",
                posterURL: "https://i.mydramalist.com/dRoQz_4f.jpg",
                synopsis: "‡πÉ‡∏ô‡∏¢‡∏∏‡∏Ñ‡πÇ‡∏ä‡∏ã‡∏≠‡∏ô ‡∏≠‡∏á‡∏Ñ‡πå‡∏ä‡∏≤‡∏¢‡∏£‡∏±‡∏ä‡∏ó‡∏≤‡∏¢‡∏≤‡∏ó‡∏≠‡∏µ‡∏ä‡∏≤‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏∑‡∏ö‡∏´‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡πà‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏≤ ‡πÅ‡∏ï‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ú‡∏ä‡∏¥‡∏ç‡∏Å‡∏±‡∏ö‡πÇ‡∏£‡∏Ñ‡∏£‡∏∞‡∏ö‡∏≤‡∏î‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡∏ô‡∏ï‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏™‡∏π‡∏£‡∏Å‡∏≤‡∏¢‡∏Å‡∏£‡∏∞‡∏´‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡πÄ‡∏Ç‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡πà‡∏≠‡∏™‡∏π‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏Å‡∏õ‡πâ‡∏≠‡∏á‡∏≠‡∏≤‡∏ì‡∏≤‡∏à‡∏±‡∏Å‡∏£‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô‡∏à‡∏≤‡∏Å‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ",
                music: "N/A",
                writer: "‡∏Ñ‡∏¥‡∏°‡∏≠‡∏∂‡∏ô‡∏Æ‡∏µ",
                director: "‡∏Ñ‡∏¥‡∏°‡∏ã‡∏≠‡∏á‡∏Æ‡∏∏‡∏ô",
                cast: "‡∏à‡∏π‡∏à‡∏µ‡∏Æ‡∏∏‡∏ô, ‡πÅ‡∏ö‡∏î‡∏π‡∏ô‡∏≤, ‡∏£‡∏¢‡∏π‡∏ã‡∏∂‡∏á‡∏£‡∏¢‡∏á",
                studio: "AStory"
            }
        ];

        // --- Global Variables & Selectors ---
        let movies = [];
        let loggedIn = false;

        const movieGrid = document.getElementById('movie-grid');
        const modal = document.getElementById('movie-modal');
        const modalBody = document.getElementById('modal-body-content');
        const closeModalBtn = document.querySelector('.close-btn');
        const deleteMovieBtn = document.getElementById('delete-movie-btn');

        const loginSection = document.getElementById('login-section');
        const adminPanel = document.getElementById('admin-panel');
        const mainContent = document.getElementById('main-content');
        const adminLoginBtn = document.getElementById('admin-login-btn');
        const logoutBtn = document.getElementById('logout-btn');
        const loginForm = document.getElementById('login-form');
        const addMovieForm = document.getElementById('add-movie-form');
        const uploadBtn = document.getElementById('upload-btn');
        const htmlUploadInput = document.getElementById('html-upload');

        // --- Data Functions ---
        const getMoviesFromStorage = () => {
            const storedMovies = localStorage.getItem('moviesDB');
            if (storedMovies) {
                return JSON.parse(storedMovies);
            } else {
                // If no data in storage, use initial data and save it
                localStorage.setItem('moviesDB', JSON.stringify(initialMovies));
                return initialMovies;
            }
        };

        const saveMoviesToStorage = (moviesData) => {
            localStorage.setItem('moviesDB', JSON.stringify(moviesData));
        };

        // --- Render Functions ---
        const renderMovies = () => {
            movieGrid.innerHTML = ''; // Clear existing grid
            movies.forEach((movie, index) => {
                const movieCard = document.createElement('div');
                movieCard.className = 'movie-card';
                movieCard.dataset.index = index; // Use index to find movie data
                movieCard.innerHTML = `
                    <img src="${movie.posterURL}" alt="${movie.nameTH}">
                    <div class="movie-card-title">${movie.nameTH}</div>
                `;
                movieCard.addEventListener('click', () => showMovieDetails(index));
                movieGrid.appendChild(movieCard);
            });
        };

        const showMovieDetails = (index) => {
            const movie = movies[index];
            modalBody.innerHTML = `
                <div class="modal-poster">
                    <img src="${movie.posterURL}" alt="${movie.nameTH}">
                </div>
                <div class="modal-details">
                    <h2>${movie.nameTH}</h2>
                    <h4>${movie.nameEN || ''}</h4>
                    <p>${movie.synopsis || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏¢‡πà‡∏≠'}</p>

                    <h3><span style="color:var(--primary-color)">‚ÑπÔ∏è</span> ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</h3>
                    <div class="info-grid">
                        <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®:</strong> ${movie.country || 'N/A'}</p>
                        <p><strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó:</strong> ${movie.genre || 'N/A'}</p>
                        <p><strong>‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏â‡∏≤‡∏¢:</strong> ${movie.year || 'N/A'}</p>
                        <p><strong>‡∏ã‡∏µ‡∏ã‡∏±‡πà‡∏ô:</strong> ${movie.seasons || 'N/A'}</p>
                        <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏≠‡∏ô:</strong> ${movie.episodes || 'N/A'}</p>
                        <p><strong>‡πÄ‡∏ß‡∏•‡∏≤/‡∏ï‡∏≠‡∏ô:</strong> ${movie.duration || 'N/A'} ‡∏ô‡∏≤‡∏ó‡∏µ</p>
                        <p><strong>‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏≤‡∏Å‡∏¢‡πå:</strong> ${movie.audio || 'N/A'}</p>
                        <p><strong>‡∏Ñ‡∏≥‡∏ö‡∏£‡∏£‡∏¢‡∏≤‡∏¢:</strong> ${movie.subtitle || 'N/A'}</p>
                        <p><strong>‡πÅ‡∏û‡∏•‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°:</strong> ${[movie.platform1, movie.platform2].filter(Boolean).join(', ') || 'N/A'}</p>
                    </div>

                    <h3><span style="color:var(--primary-color)">üé¨</span> ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ</h3>
                     <div class="info-grid">
                        <p><strong>‡∏ú‡∏π‡πâ‡∏Å‡∏≥‡∏Å‡∏±‡∏ö:</strong> ${movie.director || 'N/A'}</p>
                        <p><strong>‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ö‡∏ó:</strong> ${movie.writer || 'N/A'}</p>
                        <p><strong>‡∏Ñ‡πà‡∏≤‡∏¢‡∏´‡∏ô‡∏±‡∏á:</strong> ${movie.studio || 'N/A'}</p>
                        <p><strong>‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö:</strong> ${movie.music || 'N/A'}</p>
                        <p><strong>‡∏ô‡∏±‡∏Å‡πÅ‡∏™‡∏î‡∏á:</strong> ${movie.cast || 'N/A'}</p>
                    </div>
                </div>
            `;
            deleteMovieBtn.dataset.index = index; // Set index for deletion
            if(loggedIn) {
                deleteMovieBtn.style.display = 'block';
            }
            modal.style.display = 'block';
        };

        const closeModal = () => {
            modal.style.display = 'none';
        };

        // --- Admin Functions ---
        const showAdminView = (isLoggedIn) => {
            loggedIn = isLoggedIn;
            if (isLoggedIn) {
                adminPanel.style.display = 'block';
                loginSection.style.display = 'none';
                mainContent.style.display = 'block';
                adminLoginBtn.style.display = 'none';
                 if (modal.style.display === 'block') {
                    deleteMovieBtn.style.display = 'block';
                }
            } else {
                adminPanel.style.display = 'none';
                loginSection.style.display = 'none'; // Hide login form by default
                mainContent.style.display = 'block';
                adminLoginBtn.style.display = 'block';
                deleteMovieBtn.style.display = 'none';
            }
        };

        const handleLogin = (e) => {
            e.preventDefault();
            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const loginError = document.getElementById('login-error');

            // IMPORTANT: This is NOT secure. For demonstration only.
            if (username === 'admin' && password === 'SS9362') {
                sessionStorage.setItem('isAdminLoggedIn', 'true'); // Use sessionStorage
                showAdminView(true);
                loginError.style.display = 'none';
            } else {
                 loginError.style.display = 'block';
            }
        };

        const handleLogout = () => {
             sessionStorage.removeItem('isAdminLoggedIn');
             showAdminView(false);
        };

        const handleAddMovie = (e) => {
            e.preventDefault();
            const newMovie = {
                nameTH: document.getElementById('nameTH').value,
                nameEN: document.getElementById('nameEN').value,
                country: document.getElementById('country').value,
                genre: document.getElementById('genre').value,
                year: document.getElementById('year').value,
                duration: document.getElementById('duration').value,
                seasons: document.getElementById('seasons').value,
                episodes: document.getElementById('episodes').value,
                audio: document.getElementById('audio').value,
                subtitle: document.getElementById('subtitle').value,
                platform1: document.getElementById('platform1').value,
                platform2: document.getElementById('platform2').value,
                posterURL: document.getElementById('posterURL').value,
                synopsis: document.getElementById('synopsis').value,
                music: document.getElementById('music').value,
                writer: document.getElementById('writer').value,
                director: document.getElementById('director').value,
                cast: document.getElementById('cast').value,
                studio: document.getElementById('studio').value,
            };

            movies.unshift(newMovie); // Add to the beginning of the array
            saveMoviesToStorage(movies);
            renderMovies();
            addMovieForm.reset();
            alert('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');
        };

        const handleDeleteMovie = () => {
            const indexToDelete = deleteMovieBtn.dataset.index;
            if (confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á "${movies[indexToDelete].nameTH}"?`)) {
                movies.splice(indexToDelete, 1); // Remove the movie from array
                saveMoviesToStorage(movies);
                renderMovies();
                closeModal();
                alert('‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
            }
        };

        const handleFileUpload = () => {
            const file = htmlUploadInput.files[0];
            if (!file) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏Å‡πà‡∏≠‡∏ô');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                const content = e.target.result;
                const parser = new DOMParser();
                const doc = parser.parseFromString(content, 'text/html');
                const rows = doc.querySelectorAll('tbody tr');

                if (rows.length === 0) {
                    alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå HTML');
                    return;
                }

                let addedCount = 0;
                rows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    if(cells.length < 18) return; // Skip if not enough columns

                    const movieData = {
                        nameTH: cells[0].textContent,
                        nameEN: cells[1].textContent,
                        country: cells[2].textContent,
                        genre: cells[3].textContent,
                        year: cells[4].textContent,
                        seasons: cells[5].textContent,
                        episodes: cells[6].textContent,
                        duration: cells[7].textContent,
                        audio: cells[8].textContent,
                        subtitle: cells[9].textContent,
                        platform1: cells[10].textContent,
                        platform2: cells[11].textContent,
                        posterURL: cells[12].textContent,
                        synopsis: cells[13].textContent,
                        music: cells[14].textContent,
                        writer: cells[15].textContent,
                        director: cells[16].textContent,
                        cast: cells[17].textContent,
                        studio: cells[18].textContent,
                    };
                    movies.unshift(movieData);
                    addedCount++;
                });

                saveMoviesToStorage(movies);
                renderMovies();
                htmlUploadInput.value = ''; // Reset file input
                alert(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${addedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£!`);
            };
            reader.readAsText(file);
        };


        // --- Event Listeners ---
        closeModalBtn.addEventListener('click', closeModal);
        window.addEventListener('click', (e) => {
            if (e.target == modal) {
                closeModal();
            }
        });

        adminLoginBtn.addEventListener('click', () => {
            loginSection.style.display = 'block';
            mainContent.style.display = 'none'; // Hide main content while logging in
        });

        loginForm.addEventListener('submit', handleLogin);
        logoutBtn.addEventListener('click', handleLogout);
        addMovieForm.addEventListener('submit', handleAddMovie);
        deleteMovieBtn.addEventListener('click', handleDeleteMovie);
        uploadBtn.addEventListener('click', handleFileUpload);


        // --- Initial Load ---
        movies = getMoviesFromStorage();
        if (sessionStorage.getItem('isAdminLoggedIn') === 'true') {
            showAdminView(true);
        } else {
            showAdminView(false);
        }
        renderMovies();
    });
    </script>
</body>
</html>